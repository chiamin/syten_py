#!/bin/bash

INPUT=$1
wdir=$PWD
JOBTEMP=~/sh/job_template
JOBSH=~/sh/job_run

shift
OUTNAME="$(echo $INPUT | sed 's/.out/.mea/g')"
JOBNAME="$(echo $INPUT | sed 's/.out/.mea/g')"
SYTENFLAGS=''
WORKDIR=$wdir
OUTDIR=$wdir

while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -o|--outname)
    OUTNAME="$2"
    shift # past argument
    shift # past value
    ;;
    -j|--jobname)
    JOBNAME="$2"
    shift # past argument
    shift # past value
    ;;
    -cplx|--complex)
    SYTENFLAGS="$SYTENFLAGS -cplx "
    shift
    ;;
    -gc|--grand_canonical)
    SYTENFLAGS="$SYTENFLAGS -gc "
    shift
    ;;
    -wdir|--workdir)
    WORKDIR="$2"
    shift # past argument
    shift # past value
    ;;    
    --default)
    shift
    ;;
    *)
            # unknown option
    shift
    ;;
esac
done

# Get number of cpus
Get_variable ()
{
    key=$1
    str=$(grep $key $INPUT)
    IFS='='
    tmp=( $str )
    re=${tmp[1]}
}
Get_variable cpus_dense;  cpus1=1; #$re;
Get_variable cpus_tensor; cpus2=14;  #$re;
Get_variable cpus_super;  cpus3=2;  #$re;
CPUS=$(( $cpus1*$cpus2*$cpus3 ))

#---------------------------------------------
cp $JOBTEMP $JOBSH

#sed -i '/workdir/c\workdir = '"$wdir" $INPUT

# SLURM variables
sed -i '/--job-name=/c\'"#SBATCH --job-name=$JOBNAME" $JOBSH
sed -i '/--cpus-per-task/c\'"#SBATCH --cpus-per-task=$CPUS" $JOBSH
sed -i '/--partition=/c\#SBATCH --partition=TH-CL' $JOBSH
sed -i '/--constraint=/c\#SBATCH --constraint=AVX2' $JOBSH
sed -i '/--time=/c\#SBATCH --time=48:00:00' $JOBSH

# User variables
varlines=$varlines"\    input=$INPUT\n"
varlines=$varlines"\    output=$OUTNAME\n"
sed -i "/# Define variables/a$varlines" $JOBSH

# Pre process
prelines=$prelines'cp $SLURM_SUBMIT_DIR/*.lat ./'"\n"
prelines=$prelines"\    "'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/project/theorie/c/C.Hubig/boost/v1_60/lib'"\n"
prelines=$prelines"\    source $sytendir/envvars.source\n"
sed -i "/# Pre process/a$prelines" $JOBSH

# Executive lines
sytenpydir=$SYTENPYDIR
#exelines=$exelines"\    srun python $sytenpydir/measall.py $INPUT $SYTENFLAGS"' -odir $SLURM_SUBMIT_DIR'" -wdir $WORKDIR"" -cpus_tensor $cpus2 >> "'$SLURM_SUBMIT_DIR/'"$OUTNAME 2>&1\n"
exelines=$exelines"\    python $sytenpydir/measpair.py $INPUT $SYTENFLAGS -workdir $wdir -outdir $wdir -cpus_tensor $cpus2 > measpair.sh\n"
exelines=$exelines"\    srun sh measpair.sh\n" 
sed -i "/# Execution/a$exelines" $JOBSH

# After job finished
aftlines=$afterline'\    rm $scratch/*.cache'
sed -i "/# After finish/a$aftlines" $JOBSH

sbatch $JOBSH
