#!/bin/bash
#SBATCH --job-name=hub64x4_tp0_mu1.4_2.1.pairing.mea
#SBATCH --partition=TH-CL,TH-WS
#SBATCH --nodes=1
#SBATCH --tasks-per-node=1
#SBATCH --cpus-per-task=1
#SBATCH --mem-per-cpu=3Gb
#SBATCH --threads-per-core=1
#SBATCH --begin=now
#SBATCH --time=96:00:00
#SBATCH --mail-user=chiamin.chung@lmu.de
#SBATCH --no-requeue
#SBATCH --constraint=

scratch=/data/ChiaMin.Chung/$SLURM_JOB_ID

slurm_startjob()
{
    # Define variables
    input=hub64x4_tp0_mu1.4_2.1.pairing.mea
    output=hub64x4_tp0_mu1.4_2.1.pairing.mea.out


    # Go to scratch
    mkdir -p $scratch
    #if [ -n "$input" ]; then
        cp $input $scratch
    #fi
    cd $scratch

    # Pre process
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/project/theorie/c/C.Hubig/boost/v1_60/lib

    #if [ -n "$output" ]; then
        cat $0 >> $SLURM_SUBMIT_DIR/$output
        slurm_info_out >> $SLURM_SUBMIT_DIR/$output
    #fi

    # Execution
    cp $SLURM_SUBMIT_DIR/hub64x4_tp0_mu1.4_2.1.pairing.mea ./
    cp $SLURM_SUBMIT_DIR/././hub64x4_tp0_mu1.4_2.1_64x4_su2gc.lat ./
    cp $SLURM_SUBMIT_DIR/pairing.tmp ./
    chmod +x hub64x4_tp0_mu1.4_2.1.pairing.mea ./
    ./hub64x4_tp0_mu1.4_2.1.pairing.mea >> $SLURM_SUBMIT_DIR/hub64x4_tp0_mu1.4_2.1.pairing.mea.out


    # After finish
    rm $scratch/*.cache
    echo Job Done
}

slurm_info_out()
{
    echo "----- Job Information -----"
    date
    echo
    echo "The job will be started on the following node(s):"
    echo $SLURM_JOB_NODELIST
    echo
    echo "Slurm User:         $SLURM_JOB_USER"
    echo "Run Directory:      $SLURM_JOB_NODELIST:$(pwd)"
    echo "Job ID:             $SLURM_JOB_ID"
    echo "Submitted From:     $SLURM_SUBMIT_HOST:$SLURM_SUBMIT_DIR"
    echo "---------------------------"
    echo
}

slurm_info_out
slurm_startjob
